# Generated by Django 3.2.15 on 2023-02-26 19:29

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Addition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('logo', models.ImageField(upload_to='additions/logos/')),
            ],
        ),
        migrations.CreateModel(
            name='ChessBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=8)),
                ('chess_type', models.CharField(choices=[('draft', 'Чорновик')], max_length=20)),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChessBoardFlat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted', models.BooleanField(default=False)),
                ('address', models.TextField()),
                ('purpose', models.CharField(choices=[('apartments', 'Квартири')], max_length=20)),
                ('room_amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('planning', models.CharField(choices=[('studio-bathroom', 'Студія і ванна'), ('studio', 'Студія')], max_length=30)),
                ('house_condition', models.CharField(choices=[('repair-required', 'Потрібен ремонт'), ('good', 'Задовільний')], max_length=30)),
                ('overall_square', models.FloatField(validators=[django.core.validators.MinValueValidator(1)])),
                ('kitchen_square', models.FloatField(validators=[django.core.validators.MinValueValidator(1)])),
                ('has_balcony', models.BooleanField(default=True)),
                ('heating_type', models.CharField(choices=[('gas', 'Газ'), ('centralized', 'Централізоване')], max_length=20)),
                ('payment_option', models.CharField(choices=[('parent-capital', 'Материнський капітал')], max_length=20)),
                ('agent_commission', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('communication_method', models.CharField(choices=[('phone-messages', 'Телефон і повідомлення'), ('phone', 'Тільки телефон'), ('messages', 'Тільки повідомлення')], max_length=40)),
                ('description', models.TextField()),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('main_photo', models.ImageField(upload_to='chessboard/main_photos/')),
                ('chessboard', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='flats.chessboard')),
            ],
        ),
        migrations.CreateModel(
            name='Corps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PromotionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('efficiency', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
            ],
        ),
        migrations.CreateModel(
            name='ResidentialComplex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
                ('map_code', models.TextField()),
                ('description', models.TextField()),
                ('photo', models.ImageField(upload_to='residential_complex/photos/')),
                ('status', models.CharField(choices=[('flats', 'Квартири'), ('cottage', 'Котедж'), ('many-floors', 'Багатоповерхівка'), ('secondary-market', 'Вторинний ринок')], max_length=50)),
                ('price_for_meter', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)])),
                ('min_price', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)])),
                ('house_type', models.CharField(choices=[('cottage', 'Котедж'), ('many-floors', 'Багатоповерхівка'), ('secondary-market', 'Вторинний ринок')], max_length=50)),
                ('house_class', models.CharField(choices=[('lux', 'Люкс'), ('elite', 'Елітний'), ('common', 'Загальний')], max_length=50)),
                ('building_technology', models.CharField(choices=[('bricks', 'Цегляний')], max_length=50)),
                ('territory_type', models.CharField(choices=[('closed', 'Закрита'), ('closed-and-secured', 'Закрита та охороняється'), ('opened', 'Відкрита')], max_length=50)),
                ('sea_distance', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('ceiling_altitude', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('gas', models.BooleanField(default=True)),
                ('heating', models.CharField(choices=[('centralized', 'Централізоване')], max_length=50)),
                ('electricity', models.BooleanField(default=True)),
                ('sewage', models.CharField(choices=[('centralized', 'Централізоване')], max_length=50)),
                ('water_supply', models.CharField(choices=[('centralized', 'Централізоване')], max_length=50)),
                ('arrangement', models.CharField(choices=[('justice', 'Юстиція')], max_length=50)),
                ('payment', models.CharField(choices=[('mortgage', 'Іпотека'), ('parent-capital', 'Материнський капітал')], max_length=50)),
                ('purpose', models.CharField(choices=[('living-building', 'Житловий будинок')], max_length=50)),
                ('sum_in_contract', models.CharField(choices=[('full', 'Повна'), ('part', 'Частинами')], max_length=20)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('residential_complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flats.residentialcomplex')),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to='promotions/')),
                ('header', models.CharField(max_length=200, null=True)),
                ('color', models.CharField(blank=True, choices=[('green', 'Зелений'), ('red', 'Червоний')], max_length=15, null=True)),
                ('chessboard_flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flats.chessboardflat')),
                ('promotion_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='flats.promotiontype')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='photos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sequence_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flats.gallery')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('residential_complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flats.residentialcomplex')),
            ],
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('residential_complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flats.residentialcomplex')),
            ],
        ),
        migrations.CreateModel(
            name='Flat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=200)),
                ('micro_district', models.CharField(max_length=200)),
                ('room_amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('scheme', models.ImageField(upload_to='flats/schemes/')),
                ('square', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('condition', models.CharField(choices=[('draft', 'Чорновик'), ('living-condition', 'Житлова')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('corps', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='flats.corps')),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='flats.floor')),
                ('gallery', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='flats.gallery')),
                ('residential_complex', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='flats.residentialcomplex')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='flats.section')),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chessboard_flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flats.chessboardflat')),
                ('residential_complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flats.residentialcomplex')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('document', models.FileField(upload_to='residential_complex/documents/')),
                ('residential_complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flats.residentialcomplex')),
            ],
        ),
        migrations.AddField(
            model_name='corps',
            name='residential_complex',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flats.residentialcomplex'),
        ),
        migrations.AddField(
            model_name='chessboardflat',
            name='flat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='flats.flat'),
        ),
        migrations.AddField(
            model_name='chessboardflat',
            name='gallery',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='flats.gallery'),
        ),
        migrations.AddField(
            model_name='chessboardflat',
            name='residential_complex',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='flats.residentialcomplex'),
        ),
        migrations.AddField(
            model_name='chessboard',
            name='corps',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='flats.corps'),
        ),
        migrations.AddField(
            model_name='chessboard',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='flats.section'),
        ),
        migrations.CreateModel(
            name='AdditionInComplex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turned_on', models.BooleanField(default=False)),
                ('addition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flats.addition')),
                ('residential_complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flats.residentialcomplex')),
            ],
        ),
    ]
